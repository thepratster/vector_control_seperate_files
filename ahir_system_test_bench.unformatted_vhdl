library std;
use std.standard.all;
library ieee;
use ieee.std_logic_1164.all;
			library ahir;
					use ahir.memory_subsystem_package.all;
	use ahir.types.all;
				use ahir.subprograms.all;
			use ahir.components.all;
			use ahir.basecomponents.all;
			use ahir.operatorpackage.all;
  use ahir.utilities.all;
use ahir.functionLibraryComponents.all;
library work;
use work.ahir_system_global_package.all;
library GhdlLink;
use GhdlLink.Utility_Package.all;
use GhdlLink.Vhpi_Foreign.all;
entity ahir_system_Test_Bench is -- {
-- }
 end entity;
architecture VhpiLink of ahir_system_Test_Bench is -- {
component ahir_system is -- { 
port (-- {
clk : in std_logic;
reset : in std_logic); -- }
-- }
 end component;
signal clk: std_logic := '0';
signal reset: std_logic := '1';
-- }
 begin --{
-- clock/reset generation 
clk <= not clk after 5 ns;
process
begin --{
Vhpi_Initialize;
wait until clk = '1';
reset <= '0';
while true loop --{
wait until clk = '0';
Vhpi_Listen;
Vhpi_Send;
--}
end loop;
wait;
--}
end process;

-- connect all the top-level modules to Vhpi
ahir_system_instance: ahir_system -- {
port map ( -- {

clk => clk,
reset => reset); -- }}
-- }
 end VhpiLink;
